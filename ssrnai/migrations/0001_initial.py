# Generated by Django 2.0.4 on 2021-10-05 20:17

from django.db import migrations, models
import django.db.models.deletion
import projeto.models.template


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Capim_Dicer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirna_number', models.IntegerField(verbose_name='sirna_number')),
                ('coverage', models.IntegerField(verbose_name='coverage')),
                ('location', models.TextField(verbose_name='location')),
            ],
            options={
                'verbose_name': 'dicer',
                'verbose_name_plural': 'dicers',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Capim_Dsrna_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dsrna_name', models.CharField(max_length=100, verbose_name='dsrna_name')),
                ('start', models.IntegerField(verbose_name='start')),
                ('stop', models.IntegerField(verbose_name='stop')),
                ('length', models.IntegerField(verbose_name='length')),
                ('dsrna_seq', models.TextField(verbose_name='dsrna_seq')),
            ],
            options={
                'verbose_name': 'dsrna',
                'verbose_name_plural': 'dsrnas',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Capim_expression_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=50, verbose_name='expression_id')),
                ('treatment', models.CharField(max_length=400, verbose_name='treatment')),
                ('ncbi_id', models.CharField(max_length=150, verbose_name='ncbi_id')),
                ('condition_description', models.TextField(verbose_name='condition_description')),
            ],
            options={
                'verbose_name': 'expression_description',
                'verbose_name_plural': 'expression_descriptions',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Capim_Gene_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='gene_name')),
                ('length', models.IntegerField(verbose_name='length')),
                ('cds_seq', models.TextField(verbose_name='cds_seq')),
                ('gene_description', models.TextField(verbose_name='gene_description')),
                ('sprot_top_blastx_hit', models.TextField(verbose_name='sprot_top_blastx_hit')),
                ('pfam', models.TextField(verbose_name='pfam')),
                ('kegg', models.TextField(verbose_name='kegg')),
                ('gene_ontology_blastx', models.TextField(verbose_name='gene_ontology_blastx')),
                ('gene_ontology_pfam', models.TextField(verbose_name='kegene_ontology_pfamgg')),
            ],
            options={
                'verbose_name': 'gene',
                'verbose_name_plural': 'genes',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Capim_Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.FloatField(verbose_name='correlation')),
                ('p_value', models.FloatField(verbose_name='p_value')),
                ('group', models.CharField(max_length=100, verbose_name='group')),
                ('gene1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene1', to='ssrnai.Capim_Gene_Information')),
                ('gene2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene2', to='ssrnai.Capim_Gene_Information')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Capim_Off_Targets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragment_seq', models.TextField(verbose_name='fragment_seq')),
                ('start', models.IntegerField(verbose_name='start')),
                ('end', models.IntegerField(verbose_name='end')),
                ('hits', models.IntegerField(verbose_name='hits')),
                ('hits_description', models.TextField(verbose_name='hits_description')),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Capim_Gene_Information')),
            ],
            options={
                'verbose_name': 'offtarget',
                'verbose_name_plural': 'offtargets',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Conyza_Dicer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirna_number', models.IntegerField(verbose_name='sirna_number')),
                ('coverage', models.IntegerField(verbose_name='coverage')),
                ('location', models.TextField(verbose_name='location')),
            ],
            options={
                'verbose_name': 'dicer',
                'verbose_name_plural': 'dicers',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Conyza_Dsrna_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dsrna_name', models.CharField(max_length=100, verbose_name='dsrna_name')),
                ('start', models.IntegerField(verbose_name='start')),
                ('stop', models.IntegerField(verbose_name='stop')),
                ('length', models.IntegerField(verbose_name='length')),
                ('dsrna_seq', models.TextField(verbose_name='dsrna_seq')),
            ],
            options={
                'verbose_name': 'dsrna',
                'verbose_name_plural': 'dsrnas',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Conyza_expression_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=50, verbose_name='expression_id')),
                ('treatment', models.CharField(max_length=400, verbose_name='treatment')),
                ('ncbi_id', models.CharField(max_length=150, verbose_name='ncbi_id')),
                ('condition_description', models.TextField(verbose_name='condition_description')),
            ],
            options={
                'verbose_name': 'expression_description',
                'verbose_name_plural': 'expression_descriptions',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Conyza_Gene_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='gene_name')),
                ('length', models.IntegerField(verbose_name='length')),
                ('cds_seq', models.TextField(verbose_name='cds_seq')),
                ('gene_description', models.TextField(verbose_name='gene_description')),
                ('sprot_top_blastx_hit', models.TextField(verbose_name='sprot_top_blastx_hit')),
                ('pfam', models.TextField(verbose_name='pfam')),
                ('kegg', models.TextField(verbose_name='kegg')),
                ('gene_ontology_blastx', models.TextField(verbose_name='gene_ontology_blastx')),
                ('gene_ontology_pfam', models.TextField(verbose_name='kegene_ontology_pfamgg')),
            ],
            options={
                'verbose_name': 'gene',
                'verbose_name_plural': 'genes',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Conyza_Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.FloatField(verbose_name='correlation')),
                ('p_value', models.FloatField(verbose_name='p_value')),
                ('group', models.CharField(max_length=100, verbose_name='group')),
                ('gene1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene1', to='ssrnai.Conyza_Gene_Information')),
                ('gene2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene2', to='ssrnai.Conyza_Gene_Information')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Conyza_Off_Targets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragment_seq', models.TextField(verbose_name='fragment_seq')),
                ('start', models.IntegerField(verbose_name='start')),
                ('end', models.IntegerField(verbose_name='end')),
                ('hits', models.IntegerField(verbose_name='hits')),
                ('hits_description', models.TextField(verbose_name='hits_description')),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Conyza_Gene_Information')),
            ],
            options={
                'verbose_name': 'offtarget',
                'verbose_name_plural': 'offtargets',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('description', models.TextField(blank=True)),
                ('data_cadastro', models.DateTimeField(auto_now_add=True)),
                ('data_atualizado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'database',
                'verbose_name_plural': 'databases',
                'ordering': ['name'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Lagarta_Dicer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirna_number', models.IntegerField(verbose_name='sirna_number')),
                ('coverage', models.IntegerField(verbose_name='coverage')),
                ('location', models.TextField(verbose_name='location')),
            ],
            options={
                'verbose_name': 'dicer',
                'verbose_name_plural': 'dicers',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Lagarta_Dsrna_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dsrna_name', models.CharField(max_length=100, verbose_name='dsrna_name')),
                ('start', models.IntegerField(verbose_name='start')),
                ('stop', models.IntegerField(verbose_name='stop')),
                ('length', models.IntegerField(verbose_name='length')),
                ('dsrna_seq', models.TextField(verbose_name='dsrna_seq')),
            ],
            options={
                'verbose_name': 'dsrna',
                'verbose_name_plural': 'dsrnas',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Lagarta_expression_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=50, verbose_name='expression_id')),
                ('treatment', models.CharField(max_length=400, verbose_name='treatment')),
                ('ncbi_id', models.CharField(max_length=150, verbose_name='ncbi_id')),
                ('condition_description', models.TextField(verbose_name='condition_description')),
            ],
            options={
                'verbose_name': 'expression_description',
                'verbose_name_plural': 'expression_descriptions',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Lagarta_Gene_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='gene_name')),
                ('length', models.IntegerField(verbose_name='length')),
                ('cds_seq', models.TextField(verbose_name='cds_seq')),
                ('gene_description', models.TextField(verbose_name='gene_description')),
                ('sprot_top_blastx_hit', models.TextField(verbose_name='sprot_top_blastx_hit')),
                ('pfam', models.TextField(verbose_name='pfam')),
                ('kegg', models.TextField(verbose_name='kegg')),
                ('gene_ontology_blastx', models.TextField(verbose_name='gene_ontology_blastx')),
                ('gene_ontology_pfam', models.TextField(verbose_name='kegene_ontology_pfamgg')),
            ],
            options={
                'verbose_name': 'gene',
                'verbose_name_plural': 'genes',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Lagarta_Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.FloatField(verbose_name='correlation')),
                ('p_value', models.FloatField(verbose_name='p_value')),
                ('group', models.CharField(max_length=100, verbose_name='group')),
                ('gene1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene1', to='ssrnai.Lagarta_Gene_Information')),
                ('gene2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene2', to='ssrnai.Lagarta_Gene_Information')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Lagarta_Off_Targets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragment_seq', models.TextField(verbose_name='fragment_seq')),
                ('start', models.IntegerField(verbose_name='start')),
                ('end', models.IntegerField(verbose_name='end')),
                ('hits', models.IntegerField(verbose_name='hits')),
                ('hits_description', models.TextField(verbose_name='hits_description')),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Lagarta_Gene_Information')),
            ],
            options={
                'verbose_name': 'offtarget',
                'verbose_name_plural': 'offtargets',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Nematoide_Dicer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirna_number', models.IntegerField(verbose_name='sirna_number')),
                ('coverage', models.IntegerField(verbose_name='coverage')),
                ('location', models.TextField(verbose_name='location')),
            ],
            options={
                'verbose_name': 'dicer',
                'verbose_name_plural': 'dicers',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Nematoide_Dsrna_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dsrna_name', models.CharField(max_length=100, verbose_name='dsrna_name')),
                ('start', models.IntegerField(verbose_name='start')),
                ('stop', models.IntegerField(verbose_name='stop')),
                ('length', models.IntegerField(verbose_name='length')),
                ('dsrna_seq', models.TextField(verbose_name='dsrna_seq')),
            ],
            options={
                'verbose_name': 'dsrna',
                'verbose_name_plural': 'dsrnas',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Nematoide_expression_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=50, verbose_name='expression_id')),
                ('treatment', models.CharField(max_length=400, verbose_name='treatment')),
                ('ncbi_id', models.CharField(max_length=150, verbose_name='ncbi_id')),
                ('condition_description', models.TextField(verbose_name='condition_description')),
            ],
            options={
                'verbose_name': 'expression_description',
                'verbose_name_plural': 'expression_descriptions',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Nematoide_Gene_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='gene_name')),
                ('length', models.IntegerField(verbose_name='length')),
                ('cds_seq', models.TextField(verbose_name='cds_seq')),
                ('gene_description', models.TextField(verbose_name='gene_description')),
                ('sprot_top_blastx_hit', models.TextField(verbose_name='sprot_top_blastx_hit')),
                ('pfam', models.TextField(verbose_name='pfam')),
                ('kegg', models.TextField(verbose_name='kegg')),
                ('gene_ontology_blastx', models.TextField(verbose_name='gene_ontology_blastx')),
                ('gene_ontology_pfam', models.TextField(verbose_name='kegene_ontology_pfamgg')),
            ],
            options={
                'verbose_name': 'gene',
                'verbose_name_plural': 'genes',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Nematoide_Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.FloatField(verbose_name='correlation')),
                ('p_value', models.FloatField(verbose_name='p_value')),
                ('group', models.CharField(max_length=100, verbose_name='group')),
                ('gene1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene1', to='ssrnai.Nematoide_Gene_Information')),
                ('gene2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene2', to='ssrnai.Nematoide_Gene_Information')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Nematoide_Off_Targets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragment_seq', models.TextField(verbose_name='fragment_seq')),
                ('start', models.IntegerField(verbose_name='start')),
                ('end', models.IntegerField(verbose_name='end')),
                ('hits', models.IntegerField(verbose_name='hits')),
                ('hits_description', models.TextField(verbose_name='hits_description')),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Nematoide_Gene_Information')),
            ],
            options={
                'verbose_name': 'offtarget',
                'verbose_name_plural': 'offtargets',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Organisms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organism_name', models.CharField(max_length=150, unique=True, verbose_name='organism_name')),
                ('common_name', models.CharField(max_length=150, verbose_name='common_name')),
                ('taxonomy', models.CharField(blank=True, max_length=1000, null=True, verbose_name='taxonomy')),
                ('database', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Database')),
            ],
            options={
                'verbose_name': 'organism',
                'verbose_name_plural': 'organisms',
                'ordering': ['organism_name'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Percevejo_Dicer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sirna_number', models.IntegerField(verbose_name='sirna_number')),
                ('coverage', models.IntegerField(verbose_name='coverage')),
                ('location', models.TextField(verbose_name='location')),
            ],
            options={
                'verbose_name': 'dicer',
                'verbose_name_plural': 'dicers',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Percevejo_Dsrna_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dsrna_name', models.CharField(max_length=100, verbose_name='dsrna_name')),
                ('start', models.IntegerField(verbose_name='start')),
                ('stop', models.IntegerField(verbose_name='stop')),
                ('length', models.IntegerField(verbose_name='length')),
                ('dsrna_seq', models.TextField(verbose_name='dsrna_seq')),
            ],
            options={
                'verbose_name': 'dsrna',
                'verbose_name_plural': 'dsrnas',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Percevejo_expression_description',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expression', models.CharField(max_length=50, verbose_name='expression_id')),
                ('treatment', models.CharField(max_length=400, verbose_name='treatment')),
                ('ncbi_id', models.CharField(max_length=150, verbose_name='ncbi_id')),
                ('condition_description', models.TextField(verbose_name='condition_description')),
                ('organism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms')),
            ],
            options={
                'verbose_name': 'expression_description',
                'verbose_name_plural': 'expression_descriptions',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Percevejo_Gene_Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gene_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='gene_name')),
                ('length', models.IntegerField(verbose_name='length')),
                ('cds_seq', models.TextField(verbose_name='cds_seq')),
                ('gene_description', models.TextField(verbose_name='gene_description')),
                ('sprot_top_blastx_hit', models.TextField(verbose_name='sprot_top_blastx_hit')),
                ('pfam', models.TextField(verbose_name='pfam')),
                ('kegg', models.TextField(verbose_name='kegg')),
                ('gene_ontology_blastx', models.TextField(verbose_name='gene_ontology_blastx')),
                ('gene_ontology_pfam', models.TextField(verbose_name='kegene_ontology_pfamgg')),
                ('organism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms')),
            ],
            options={
                'verbose_name': 'gene',
                'verbose_name_plural': 'genes',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Percevejo_Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correlation', models.FloatField(verbose_name='correlation')),
                ('p_value', models.FloatField(verbose_name='p_value')),
                ('group', models.CharField(max_length=100, verbose_name='group')),
                ('gene1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene1', to='ssrnai.Percevejo_Gene_Information')),
                ('gene2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gene2', to='ssrnai.Percevejo_Gene_Information')),
                ('organism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms')),
            ],
            options={
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),
        migrations.CreateModel(
            name='Percevejo_Off_Targets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fragment_seq', models.TextField(verbose_name='fragment_seq')),
                ('start', models.IntegerField(verbose_name='start')),
                ('end', models.IntegerField(verbose_name='end')),
                ('hits', models.IntegerField(verbose_name='hits')),
                ('hits_description', models.TextField(verbose_name='hits_description')),
                ('gene', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Percevejo_Gene_Information')),
                ('organism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms')),
            ],
            options={
                'verbose_name': 'offtarget',
                'verbose_name_plural': 'offtargets',
                'ordering': ['id'],
            },
            bases=(models.Model, projeto.models.template.TemplateModelMixin),
        ),migrations.AddField(
            model_name='percevejo_dsrna_information',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Percevejo_Gene_Information'),
        ),
        migrations.AddField(
            model_name='percevejo_dsrna_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='percevejo_dicer',
            name='dsrna',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Percevejo_Dsrna_Information'),
        ),
        migrations.AddField(
            model_name='percevejo_dicer',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Percevejo_Gene_Information'),
        ),
        migrations.AddField(
            model_name='percevejo_dicer',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='nematoide_off_targets',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='nematoide_network',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='nematoide_gene_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='nematoide_expression_description',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='nematoide_dsrna_information',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Nematoide_Gene_Information'),
        ),
        migrations.AddField(
            model_name='nematoide_dsrna_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='nematoide_dicer',
            name='dsrna',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Nematoide_Dsrna_Information'),
        ),
        migrations.AddField(
            model_name='nematoide_dicer',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Nematoide_Gene_Information'),
        ),
        migrations.AddField(
            model_name='nematoide_dicer',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='lagarta_off_targets',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='lagarta_network',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='lagarta_gene_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='lagarta_expression_description',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='lagarta_dsrna_information',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Lagarta_Gene_Information'),
        ),
        migrations.AddField(
            model_name='lagarta_dsrna_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='lagarta_dicer',
            name='dsrna',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Lagarta_Dsrna_Information'),
        ),
        migrations.AddField(
            model_name='lagarta_dicer',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Lagarta_Gene_Information'),
        ),
        migrations.AddField(
            model_name='lagarta_dicer',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='conyza_off_targets',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='conyza_network',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='conyza_gene_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='conyza_expression_description',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='conyza_dsrna_information',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Conyza_Gene_Information'),
        ),
        migrations.AddField(
            model_name='conyza_dsrna_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='conyza_dicer',
            name='dsrna',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Conyza_Dsrna_Information'),
        ),
        migrations.AddField(
            model_name='conyza_dicer',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Conyza_Gene_Information'),
        ),
        migrations.AddField(
            model_name='conyza_dicer',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='capim_off_targets',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='capim_network',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='capim_gene_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='capim_expression_description',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='capim_dsrna_information',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Capim_Gene_Information'),
        ),
        migrations.AddField(
            model_name='capim_dsrna_information',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
        migrations.AddField(
            model_name='capim_dicer',
            name='dsrna',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Capim_Dsrna_Information'),
        ),
        migrations.AddField(
            model_name='capim_dicer',
            name='gene',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Capim_Gene_Information'),
        ),
        migrations.AddField(
            model_name='capim_dicer',
            name='organism',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ssrnai.Organisms'),
        ),
    ]
